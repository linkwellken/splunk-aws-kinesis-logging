{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template for AWS data ingest into Splunk using AWS Kinesis Firehose and AWS Lambda.",
  "Mappings": {
    "BucketMap": {
      "us-east-1": { "BucketName": "trumpet-splunk-prod-us-east-1" },
      "us-east-2": { "BucketName": "trumpet-splunk-prod-us-east-2" },
      "us-west-1": { "BucketName": "trumpet-splunk-prod-us-west-1" },
      "us-west-2": { "BucketName": "trumpet-splunk-prod-us-west-2" },
      "ca-central-1": { "BucketName": "trumpet-splunk-prod-ca-central-1" },
      "eu-central-1": { "BucketName": "trumpet-splunk-prod-eu-central-1" },
      "eu-west-1": { "BucketName": "trumpet-splunk-prod-eu-west-1" },
      "eu-west-2": { "BucketName": "trumpet-splunk-prod-eu-west-2" },
      "eu-west-3": { "BucketName": "trumpet-splunk-prod-eu-west-3" },
      "ap-northeast-1": { "BucketName": "trumpet-splunk-prod-ap-northeast-1" },
      "ap-northeast-2": { "BucketName": "trumpet-splunk-prod-ap-northeast-2" },
      "ap-southeast-1": { "BucketName": "trumpet-splunk-prod-ap-southeast-1" },
      "ap-southeast-2": { "BucketName": "trumpet-splunk-prod-ap-southeast-2" },
      "ap-south-1": { "BucketName": "trumpet-splunk-prod-ap-south-1" },
      "sa-east-1": { "BucketName": "trumpet-splunk-prod-sa-east-1" },
      "eu-north-1": { "BucketName": "trumpet-splunk-prod-eu-north-1" },
      "ap-northeast-3": { "BucketName": "trumpet-splunk-prod-ap-northeast-3" },
      "ap-east-1": { "BucketName": "trumpet-splunk-prod-ap-east-1" },
      "af-south-1": { "BucketName": "trumpet-splunk-prod-af-south-1" },
      "me-south-1": { "BucketName": "trumpet-splunk-prod-me-south-1" },
      "eu-south-1": { "BucketName": "trumpet-splunk-prod-eu-south-1" }
    }
  },
  "Resources": {
    "CWLFirehoseProcessor": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::FindInMap": [
              "BucketMap",
              { "Ref": "AWS::Region" },
              "BucketName"
            ]
          },
          "S3Key": "splunk_cwl_firehose_processor_v0.4.zip"
        },
        "Description": "Stream events from CloudWatch Logs to Splunk using HTTP event collector",
        "MemorySize": 512,
        "Handler": "lambda_function.handler",
        "Role": { "Fn::GetAtt": ["CWLFirehoseProcessorRole", "Arn"] },
        "Timeout": 300,
        "Runtime": "python3.7"
      }
    },
    "CWLtoKinesisFirehoseRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "CWLtoKinesisFirehosePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["firehose:*"],
                  "Resource": ["arn:aws:firehose:*:*:*"]
                },
                {
                  "Effect": "Allow",
                  "Action": ["iam:PassRole"],
                  "Resource": ["arn:aws:iam::*:role/CWLtoKinesisFirehoseRole"]
                }
              ]
            }
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": {
            "Action": "sts:AssumeRole",
            "Effect": "Allow",
            "Principal": {
              "Service": {
                "Fn::Join": [
                  "",
                  ["logs.", { "Ref": "AWS::Region" }, ".amazonaws.com"]
                ]
              }
            }
          }
        }
      }
    },
    "CWLFirehoseDeliveryStream": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "SplunkDestinationConfiguration": {
          "S3Configuration": {
            "CompressionFormat": "UNCOMPRESSED",
            "BucketARN": { "Fn::GetAtt": ["CWLBackupS3Bucket", "Arn"] },
            "RoleARN": { "Fn::GetAtt": ["CWLBackupS3Role", "Arn"] },
            "BufferingHints": { "IntervalInSeconds": 300, "SizeInMBs": 1 }
          },
          "HECEndpointType": "Event",
          "HECToken": "145df87b-5a27-4b3b-8c15-c65b5b4219cc",
          "HECAcknowledgmentTimeoutInSeconds": 180,
          "RetryOptions": { "DurationInSeconds": 300 },
          "HECEndpoint": "https://splunkhec.linkwellnodes.io:8088",
          "S3BackupMode": "FailedEventsOnly",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": ["CWLFirehoseProcessor", "Arn"]
                    }
                  },
                  {
                    "ParameterName": "RoleArn",
                    "ParameterValue": {
                      "Fn::GetAtt": ["CWLBackupS3Role", "Arn"]
                    }
                  }
                ],
                "Type": "Lambda"
              }
            ]
          }
        },
        "DeliveryStreamType": "DirectPut"
      }
    },
    "CWLFirehoseDeliveryRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Sid": "",
              "Effect": "Allow",
              "Principal": { "Service": "events.amazonaws.com" }
            }
          ]
        }
      }
    },
    "CWLFirehoseDeliveryPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "firehose_delivery_policy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": ["firehose:PutRecord", "firehose:PutRecordBatch"],
              "Resource": [
                { "Fn::GetAtt": ["CWLFirehoseDeliveryStream", "Arn"] }
              ],
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [{ "Ref": "CWLFirehoseDeliveryRole" }]
      }
    },
    "CWLBackupS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": { "VersioningConfiguration": { "Status": "Enabled" } }
    },
    "CWLBackupS3Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "CWLBackupS3Role",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": ["glue:GetTableVersions"],
                  "Resource": "*"
                },
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": [
                    "s3:AbortMultipartUpload",
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:PutObject"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:GetFunctionConfiguration"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": [
                    "kinesis:DescribeStream",
                    "kinesis:GetShardIterator",
                    "kinesis:GetRecords"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": ["kms:Decrypt"],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:kms:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":key/%SSE_KEY_ARN%"
                      ]
                    ]
                  },
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": {
                        "Fn::Join": [
                          "",
                          [
                            "kinesis.",
                            { "Ref": "AWS::Region" },
                            ".amazonaws.com"
                          ]
                        ]
                      }
                    },
                    "StringLike": {
                      "kms:EncryptionContext:aws:kinesis:arn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:kinesis:",
                            { "Ref": "AWS::Region" },
                            ":",
                            { "Ref": "AWS::AccountId" },
                            ":stream/%FIREHOSE_STREAM_NAME%"
                          ]
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Sid": "",
              "Effect": "Allow",
              "Principal": { "Service": "firehose.amazonaws.com" }
            }
          ]
        }
      }
    },
    "CWLFirehoseProcessorRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "CWLFirehoseProcessorPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "logs:CreateLogGroup",
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": ["logs:CreateLogStream", "logs:PutLogEvents"],
                  "Resource": ["arn:aws:logs:*:*:*:*:*"]
                }
              ]
            }
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": ["sts:AssumeRole"],
              "Effect": "Allow",
              "Principal": { "Service": ["lambda.amazonaws.com"] }
            }
          ]
        }
      }
    },
    "CWLFlowLogSubscriptionFilterektealogs": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "RoleArn": { "Fn::GetAtt": ["CWLtoKinesisFirehoseRole", "Arn"] },
        "LogGroupName": "EKT-EA-Logs",
        "FilterPattern": "",
        "DestinationArn": { "Fn::GetAtt": ["CWLFirehoseDeliveryStream", "Arn"] }
      }
    },
    "CWLFlowLogSubscriptionFilterektcllogs": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "RoleArn": { "Fn::GetAtt": ["CWLtoKinesisFirehoseRole", "Arn"] },
        "LogGroupName": "EKT-CL-Logs",
        "FilterPattern": "",
        "DestinationArn": { "Fn::GetAtt": ["CWLFirehoseDeliveryStream", "Arn"] }
      }
    },
    "CWLFlowLogSubscriptionFilterclientvpnlogs": {
        "Type": "AWS::Logs::SubscriptionFilter",
        "Properties": {
          "RoleArn": { "Fn::GetAtt": ["CWLtoKinesisFirehoseRole", "Arn"] },
          "LogGroupName": "Client_VPN_Log_Group",
          "FilterPattern": "",
          "DestinationArn": { "Fn::GetAtt": ["CWLFirehoseDeliveryStream", "Arn"] }
        }
      }
  }
}
